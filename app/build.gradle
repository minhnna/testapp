apply plugin: 'com.android.application'

android {
    def ValString = "String"
    def API_DOMAIN_VAR = "API_DOMAIN"

    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def appName = APP_NAME
            def date = new Date();
            def formattedDate = date.format('yyyyMMdd')

            def apkName = appName + '_' + formattedDate + '_' + versionName + '.apk';
            output.outputFile = new File(output.outputFile.parentFile, apkName)
        }
    }


    compileSdkVersion Integer.parseInt(ANDROID_BUILD_SDK_VERSION)
    buildToolsVersion ANDROID_BUILD_TOOLS_VERSION

    signingConfigs {
        debug {
            keyAlias KEY_STORE_ALIAS_DEBUG
            keyPassword KEY_STORE_PASS_DEBUG
            storeFile file(KEY_STORE_PATH_DEBUG)
            storePassword KEY_STORE_PASS_DEBUG
        }
    }

    defaultConfig {
        applicationId ANDROID_BUILD_APPLICATION_ID
        minSdkVersion Integer.parseInt(ANDROID_BUILD_MIN_SDK_VERSION)
        targetSdkVersion Integer.parseInt(ANDROID_BUILD_TARGET_SDK_VERSION)
        versionCode Integer.parseInt(VERSION_CODE)
        versionName VERSION_NAME
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {

        debug {
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            applicationIdSuffix ID_SUFFIX_DEBUG
            signingConfig signingConfigs.debug
            versionNameSuffix VERSION_NAME_SUFFIX_DEBUG
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    productFlavors {
        develop {
            buildConfigField(ValString, API_DOMAIN_VAR, API_DOMAIN_DEBUG)
        }

        product {
            buildConfigField(ValString, API_DOMAIN_VAR, API_DOMAIN)
        }
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile ('org.eclipse.paho:org.eclipse.paho.client.mqttv3:1.1.0', {
        exclude module: 'support-v4'
    })

    rootProject.appModuleDependencies.each {
        add(it.configuration, it.dependency, it.options)
    }
}
